{"version":3,"file":"popup.893fde77d4a48f8592e3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAG0B;AAC4B;AACxB;AAE9B,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB;EACA,IAAMC,SAAS,GAAG;IAChBC,QAAQ,EAAE,CAAC;IAAE;IACbC,UAAU,EAAE,CAAC;IAAE;IACfC,SAAS,EAAE,CAAC;IAAE;IACdC,WAAW,EAAE,CAAC,CAAE;EAClB,CAAC;;EAED;EACA,IAAMC,YAAY,GAAG;IACnBJ,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,SAAS;IACrBC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAE;EACf,CAAC;EAED,oBACEP,0DAAA;IAAKU,SAAS,EAAC;EAAY,gBACzBV,0DAAA;IAAKU,SAAS,EAAC;EAAiB,gBAC9BV,0DAAA,aAAI,2BAAS,CACV,CAAC,eACNA,0DAAA;IAAKU,SAAS,EAAC;EAAY,gBACzBV,0DAAA;IAAKU,SAAS,EAAC;EAAW,gBACxBV,0DAAA,eAAM,0BAAU,CAAC,eACjBA,0DAAA;IAAKU,SAAS,EAAC;EAAsB,gBACnCV,0DAAA,CAACC,mEAAW;IACVU,GAAG,EAAGR,SAAS,CAACC,QAAQ,GAAG,CAAC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","sources":["webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React from 'react';\n// import ProgressBar from 'react-bootstrap/ProgressBar';\n// import '../css/TouchInfo.css';\n\n// const TouchInfo = () => {\n//   // 임시로 사용할 촉감 데이터 (1~5점)\n//   const touchData = {\n//     softness: 5, // 부드러움\n//     smoothness: 3, // 매끄러움\n//     thickness: 4, // 두꺼움\n//     flexibility: 2, // 신축성\n//   };\n\n//   // 점수에 따른 색상 설정\n//   const getBarColor = (score, color) => {\n//     const opacity = score / 5;\n//     const hexOpacity = Math.round(opacity * 255).toString(16).padStart(2, '0');\n//     return `${color}${hexOpacity}`;\n//   };\n\n//   // 촉감별 대표 색상 설정\n//   const colorMapping = {\n//     softness: '#3A506B', \n//     smoothness: '#3A506B', \n//     thickness: '#3A506B', \n//     flexibility: '#3A506B' \n//   };\n\n//   return (\n//     <div className=\"touch-info\">\n//       <div className='touch-info-text'>\n//       <h2>촉감 정보</h2>\n//       </div>\n//       <div className='touch-area'>\n//       <div className=\"touch-bar\">\n//         <span>부드러움</span>\n//         <div className=\"progress-bar-wrapper\">\n//         <ProgressBar\n//             now={(touchData.softness / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.softness, colorMapping.softness)} 0%, ${getBarColor(touchData.softness, colorMapping.softness)} ${(touchData.softness / 5) * 100}%, #ffffff ${(touchData.softness / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>매끄러움</span>\n//         <div className=\"progress-bar-wrapper\">\n//           <ProgressBar\n//             now={(touchData.smoothness / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.smoothness, colorMapping.smoothness)} 0%, ${getBarColor(touchData.smoothness, colorMapping.smoothness)} ${(touchData.smoothness / 5) * 100}%, #ffffff ${(touchData.smoothness / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>두께</span>\n//         <div className=\"progress-bar-wrapper\">\n//           <ProgressBar\n//             now={(touchData.thickness / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.thickness, colorMapping.thickness)} 0%, ${getBarColor(touchData.thickness, colorMapping.thickness)} ${(touchData.thickness / 5) * 100}%, #ffffff ${(touchData.thickness / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>신축성</span>\n//         <div className=\"progress-bar-wrapper\">\n//           <ProgressBar\n//             now={(touchData.flexibility / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.flexibility, colorMapping.flexibility)} 0%, ${getBarColor(touchData.flexibility, colorMapping.flexibility)} ${(touchData.flexibility / 5) * 100}%, #ffffff ${(touchData.flexibility / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TouchInfo;\n\n\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport '../css/TouchInfo.css';\n\nconst TouchInfo = () => {\n  // 임시로 사용할 촉감 데이터 (1~5점)\n  const touchData = {\n    softness: 5, // 부드러움\n    smoothness: 3, // 매끄러움\n    thickness: 4, // 두꺼움\n    flexibility: 2, // 신축성\n  };\n\n  // 촉감별 대표 색상 설정\n  const colorMapping = {\n    softness: '#20edc7', \n    smoothness: '#20edc7', \n    thickness: '#20edc7', \n    flexibility: '#20edc7' \n  };\n\n  return (\n    <div className=\"touch-info\">\n      <div className='touch-info-text'>\n        <h2>촉감 정보</h2>\n      </div>\n      <div className='touch-area'>\n        <div className=\"touch-bar\">\n          <span>부드러움</span>\n          <div className=\"progress-bar-wrapper\">\n            <ProgressBar\n              now={(touchData.softness / 5) * 100}\n              className=\"custom-progress-bar\"\n              style={{\n                backgroundColor: 'transparent',\n                backgroundImage: `linear-gradient(to right, ${colorMapping.softness} 0%, ${colorMapping.softness} ${(touchData.softness / 5) * 100}%, #ffffff ${(touchData.softness / 5) * 100}%, #ffffff 100%)`\n              }}\n            />\n            <div className=\"ticks\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"touch-bar\">\n          <span>매끄러움</span>\n          <div className=\"progress-bar-wrapper\">\n            <ProgressBar\n              now={(touchData.smoothness / 5) * 100}\n              className=\"custom-progress-bar\"\n              style={{\n                backgroundColor: 'transparent',\n                backgroundImage: `linear-gradient(to right, ${colorMapping.smoothness} 0%, ${colorMapping.smoothness} ${(touchData.smoothness / 5) * 100}%, #ffffff ${(touchData.smoothness / 5) * 100}%, #ffffff 100%)`\n              }}\n            />\n            <div className=\"ticks\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"touch-bar\">\n          <span>두께</span>\n          <div className=\"progress-bar-wrapper\">\n            <ProgressBar\n              now={(touchData.thickness / 5) * 100}\n              className=\"custom-progress-bar\"\n              style={{\n                backgroundColor: 'transparent',\n                backgroundImage: `linear-gradient(to right, ${colorMapping.thickness} 0%, ${colorMapping.thickness} ${(touchData.thickness / 5) * 100}%, #ffffff ${(touchData.thickness / 5) * 100}%, #ffffff 100%)`\n              }}\n            />\n            <div className=\"ticks\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"touch-bar\">\n          <span>신축성</span>\n          <div className=\"progress-bar-wrapper\">\n            <ProgressBar\n              now={(touchData.flexibility / 5) * 100}\n              className=\"custom-progress-bar\"\n              style={{\n                backgroundColor: 'transparent',\n                backgroundImage: `linear-gradient(to right, ${colorMapping.flexibility} 0%, ${colorMapping.flexibility} ${(touchData.flexibility / 5) * 100}%, #ffffff ${(touchData.flexibility / 5) * 100}%, #ffffff 100%)`\n              }}\n            />\n            <div className=\"ticks\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TouchInfo;\n","__webpack_require__.h = () => (\"09b0d2e897d88524adf7\")"],"names":["React","ProgressBar","TouchInfo","touchData","softness","smoothness","thickness","flexibility","colorMapping","createElement","className","now","style","backgroundColor","backgroundImage","concat","_toConsumableArray","Array","map","_","i","key","left"],"sourceRoot":""}