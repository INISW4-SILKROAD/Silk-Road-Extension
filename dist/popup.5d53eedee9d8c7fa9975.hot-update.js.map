{"version":3,"file":"popup.5d53eedee9d8c7fa9975.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEmD;AAEnD,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAiC;EAAA,IAA3BC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;EACvC,IAAAC,SAAA,GAA8BL,+CAAQ,CAAC,IAAI,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BP,gDAAS,CAAC,YAAM;IACd,IAAIK,SAAS,EAAE;MACbK,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM,IAAIN,SAAS,EAAE;MACpBM,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACL,SAAS,EAAED,SAAS,CAAC,CAAC;EAE1B,IAAIK,OAAO,EAAE;IACX,oBAAOV,0DAAA,cAAK,8BAAiC,CAAC;EAChD;EAEA,IAAI,CAACM,SAAS,EAAE;IACd,oBAAON,0DAAA,cAAK,yGAA4B,CAAC;EAC3C;EAEA,IAAMa,YAAY,GAAGP,SAAS,CAACQ,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IAAA,oBAC9ChB,0DAAA;MAAKiB,GAAG,EAAED;IAAM,gBACdhB,0DAAA,cAAK,UAAQ,EAACgB,KAAK,GAAG,CAAO,CAAC,eAC9BhB,0DAAA;MAAKkB,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QAAEC,KAAK,KAAAC,MAAA,CAAK,CAACN,KAAK,GAAG,CAAC,IAAI,EAAE;MAAI;IAAE,CAAM,CAC1E,CAAC;EAAA,CACP,CAAC;EAEF,oBACEf,0DAAA,2BACEA,0DAAA,aAAI,mBAAqB,CAAC,EACzBa,YACE,CAAC;AAEV,CAAC;AAED,iEAAeV,SAAS;;;;;;;;UCxHxB","sources":["webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import ProgressBar from 'react-bootstrap/ProgressBar';\r\n// import axios from 'axios';\r\n// import '../css/TouchInfo.css';\r\n\r\n// const TouchInfo = ({ productId }) => {\r\n//   const [touchData, setTouchData] = useState({\r\n//     softness: 0,\r\n//     smoothness: 0,\r\n//     thickness: 0,\r\n//     flexibility: 0\r\n//   });\r\n\r\n//   const labelMapping = {\r\n//     softness: '부드러움',\r\n//     smoothness: '매끄러움',\r\n//     thickness: '두께',\r\n//     flexibility: '신축성'\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       const fetchTouchData = async () => {\r\n//         try {\r\n//           const response = await axios.get(`http://127.0.0.1:5001/goods/${productId}`);\r\n//           const data = response.data;\r\n//           console.log(\"서버에서 받은 촉감 데이터:\", data);\r\n\r\n//           if (data) {\r\n//             setTouchData({\r\n//               softness: data.SOFTNESS || 0,\r\n//               smoothness: data.SMOOTHNESS || 0,\r\n//               thickness: data.THICKNESS || 0,\r\n//               flexibility: data.FLEXIBILITY || 0\r\n//             });\r\n//           }\r\n//         } catch (error) {\r\n//           console.error(\"촉감 데이터를 불러오는 중 에러 발생:\", error);\r\n//         }\r\n//       };\r\n\r\n//       fetchTouchData();\r\n//     }\r\n//   }, [productId]);\r\n\r\n//   const colorMapping = {\r\n//     softness: '#FFDBDA',\r\n//     smoothness: '#FFDBDA',\r\n//     thickness: '#FFDBDA',\r\n//     flexibility: '#FFDBDA'\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"touch-info\">\r\n//       <div className='touch-info-text'>\r\n//       </div>\r\n//       <div className='touch-area'>\r\n//         {Object.keys(touchData).map((key) => (\r\n//           <div key={key} className=\"touch-bar\">\r\n//             <span>{labelMapping[key]}</span>\r\n//             <div className=\"progress-bar-wrapper\">\r\n//               <ProgressBar\r\n//                 now={(touchData[key] / 5) * 100}\r\n//                 className=\"custom-progress-bar\"\r\n//                 style={{\r\n//                   backgroundColor: 'transparent',\r\n//                   backgroundImage: `linear-gradient(to right, ${colorMapping[key]} 0%, ${colorMapping[key]} ${(touchData[key] / 5) * 100}%, #ffffff ${(touchData[key] / 5) * 100}%, #ffffff 100%)`\r\n//                 }}\r\n//               />\r\n//               <div className=\"ticks\">\r\n//                 {[...Array(6)].map((_, i) => (\r\n//                   <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TouchInfo;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst TouchInfo = ({ productId, touchInfo }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (touchInfo) {\r\n      setLoading(false);\r\n    } else if (productId) {\r\n      setLoading(true);\r\n    }\r\n  }, [touchInfo, productId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading touch information...</div>;\r\n  }\r\n\r\n  if (!touchInfo) {\r\n    return <div>해당 상품의 촉감 정보를 알 수 없습니다.</div>;\r\n  }\r\n\r\n  const progressBars = touchInfo.map((value, index) => (\r\n    <div key={index}>\r\n      <div>Feature {index + 1}</div>\r\n      <div className=\"progress-bar\" style={{ width: `${(value + 1) * 20}%` }}></div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <h2>Touch Information</h2>\r\n      {progressBars}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TouchInfo;\r\n","__webpack_require__.h = () => (\"1de04b9ff32ade2ab83a\")"],"names":["React","useEffect","useState","TouchInfo","_ref","productId","touchInfo","_useState","_useState2","_slicedToArray","loading","setLoading","createElement","progressBars","map","value","index","key","className","style","width","concat"],"sourceRoot":""}