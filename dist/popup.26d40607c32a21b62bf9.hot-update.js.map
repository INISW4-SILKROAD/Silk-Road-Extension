{"version":3,"file":"popup.26d40607c32a21b62bf9.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAmD;AACrB;AAE9B,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAyB;EAAA,IAAnBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EAC/B,IAAAC,SAAA,GAA0BJ,+CAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBN,gDAAS,CAAC,YAAM;IACd,IAAIU,MAAM,IAAIA,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE;MAC1D;MACAF,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;QAAEC,MAAM,EAAE;MAAa,CAAC,EAAE,UAACC,QAAQ,EAAK;QACjE,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,KAAK,EAAE;UAC9BC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAED,QAAQ,CAACC,KAAK,CAAC;QACxD,CAAC,MAAM,IAAID,QAAQ,IAAIA,QAAQ,CAACG,IAAI,EAAE;UACpCR,QAAQ,CAACK,QAAQ,CAACG,IAAI,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAC,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAC,UAACL,QAAQ;QAAA,OAAKA,QAAQ,CAACM,IAAI,CAAC,CAAC;MAAA,EAAC,CACnCD,IAAI,CAAC,UAACF,IAAI;QAAA,OAAKR,QAAQ,CAACQ,IAAI,CAAC;MAAA,EAAC,SACzB,CAAC,UAACF,KAAK;QAAA,OAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAAA,EAAC;IACpE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,0DAAA;IAAKuB,SAAS,EAAC;EAAsB,gBACnCvB,0DAAA;IAAKuB,SAAS,EAAC;EAAkB,gBAC/BvB,0DAAA;IAAQuB,SAAS,EAAC;EAAiB,GAAC,0BAAY,CAAC,eACjDvB,0DAAA;IAAQuB,SAAS,EAAC;EAAiB,GAAC,0BAAY,CAAC,eACjDvB,0DAAA;IAAQuB,SAAS,EAAC;EAAiB,GAAC,oBAAW,CAAC,eAChDvB,0DAAA;IAAQuB,SAAS,EAAC;EAAiB,GAAC,oBAAW,CAC5C,CAAC,eACNvB,0DAAA;IAAKuB,SAAS,EAAC;EAAY,GACxBd,KAAK,CAACe,GAAG,CAAC,UAACC,IAAI;IAAA,oBACdzB,0DAAA;MAAKuB,SAAS,EAAC,YAAY;MAACG,GAAG,EAAED,IAAI,CAACE;IAAG,gBACvC3B,0DAAA;MAAK4B,GAAG,EAAE,aAAc;MAACC,GAAG,EAAEJ,IAAI,CAACK,IAAK;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM1B,YAAY,CAACoB,IAAI,CAACE,EAAE,CAAC;MAAA;IAAC,CAAE,CAAC,eACjF3B,0DAAA,YAAIyB,IAAI,CAACK,IAAI,eAAC9B,0DAAA,aAAY,CAAI,CAC3B,CAAC;EAAA,CACP,CACE,CACF,CAAC;AAEV,CAAC;AAED,iEAAeG,SAAS;;;;;;;;UC7CxB","sources":["webpack://silkroad/./src/popup/components/GoodsList.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../css/GoodsList.css';\n\nconst GoodsList = ({ onImageClick }) => {\n  const [goods, setGoods] = useState([]);\n\n  useEffect(() => {\n    if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n      // 크롬 확장 프로그램 환경\n      chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n        if (response && response.error) {\n          console.error('Error fetching goods:', response.error);\n        } else if (response && response.data) {\n          setGoods(response.data);\n        }\n      });\n    } else {\n      // 로컬 개발 환경\n      fetch('http://localhost:5001/goods')\n        .then((response) => response.json())\n        .then((data) => setGoods(data))\n        .catch((error) => console.error('Error fetching goods:', error));\n    }\n  }, []);\n\n  return (\n    <div className=\"goods-list-container\">\n      <div className=\"category-buttons\">\n        <button className=\"category-button\">부드러움</button>\n        <button className=\"category-button\">매끄러움</button>\n        <button className=\"category-button\">두꺼움</button>\n        <button className=\"category-button\">신축성</button>\n      </div>\n      <div className=\"goods-list\">\n        {goods.map((item) => (\n          <div className=\"goods-item\" key={item.ID}>\n            <img src={'/sample.png'} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n            <p>{item.NAME}<span></span></p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GoodsList;\n","__webpack_require__.h = () => (\"2d0e1d64e70d1824a0af\")"],"names":["React","useEffect","useState","GoodsList","_ref","onImageClick","_useState","_useState2","_slicedToArray","goods","setGoods","chrome","runtime","sendMessage","action","response","error","console","data","fetch","then","json","createElement","className","map","item","key","ID","src","alt","NAME","onClick"],"sourceRoot":""}