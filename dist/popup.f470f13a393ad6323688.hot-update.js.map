{"version":3,"file":"popup.f470f13a393ad6323688.hot-update.js","mappings":"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","sources":["webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React from 'react';\n// import '../css/TouchInfo.css';\n\n// const TouchInfo = () => {\n//   return (\n//     <div className=\"touch-info\">\n//       <h2>촉감 정보</h2>\n//       <div className=\"touch-bar\">\n//         <span>딱딱한</span>\n//         <div className=\"bar red\"></div>\n//         <span>부드러운</span>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>거친</span>\n//         <div className=\"bar green\"></div>\n//         <span>매끄러운</span>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>얇은</span>\n//         <div className=\"bar blue\"></div>\n//         <span>두꺼운</span>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>신축성 없는</span>\n//         <div className=\"bar purple\"></div>\n//         <span>신축성 있는</span>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TouchInfo;\n\n// import React from 'react';\n// import '../css/TouchInfo.css';\n\n// const TouchInfo = () => {\n//   // 임시로 사용할 촉감 데이터 (1~5점)\n//   const touchData = {\n//     hardness: 3, // 딱딱함 정도\n//     roughness: 2, // 거칠음 정도\n//     thickness: 4, // 두꺼움 정도\n//     elasticity: 5, // 신축성 정도\n//   };\n\n//   // 점수에 따른 색상 및 길이 설정\n//   const getBarStyle = (score, color) => ({\n//     width: `${(score / 5) * 100}%`,\n//     backgroundColor: color,\n//     opacity: score / 5,\n//   });\n\n//   return (\n//     <div className=\"touch-info\">\n//       <h2>촉감 정보</h2>\n//       <div className=\"touch-bar\">\n//         <span>딱딱한</span>\n//         <div className=\"bar\" style={getBarStyle(touchData.hardness, 'red')}></div>\n//         <span>부드러운</span>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>거친</span>\n//         <div className=\"bar\" style={getBarStyle(touchData.roughness, 'green')}></div>\n//         <span>매끄러운</span>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>얇은</span>\n//         <div className=\"bar\" style={getBarStyle(touchData.thickness, 'blue')}></div>\n//         <span>두꺼운</span>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>신축성 없는</span>\n//         <div className=\"bar\" style={getBarStyle(touchData.elasticity, 'purple')}></div>\n//         <span>신축성 있는</span>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TouchInfo;\n\n\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport '../css/TouchInfo.css';\n\nconst TouchInfo = () => {\n  // 임시로 사용할 촉감 데이터 (1~5점)\n  const touchData = {\n    hardness: 1, // 딱딱함 정도\n    roughness: 2, // 거칠음 정도\n    thickness: 4, // 두꺼움 정도\n    elasticity: 5, // 신축성 정도\n  };\n\n  // 점수에 따른 색상 설정\n  const getBarColor = (score) => {\n    if (score === 1) return '#ffcccc';\n    if (score === 2) return '#ff9999';\n    if (score === 3) return '#ff6666';\n    if (score === 4) return '#ff3333';\n    return '#ff0000';\n  };\n\n  return (\n    <div className=\"touch-info\">\n      <h2>촉감 정보</h2>\n      <div className=\"touch-bar\">\n        <span>딱딱한</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar now={(touchData.hardness / 5) * 100} style={{ backgroundColor: getBarColor(touchData.hardness) }} />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n        <span>부드러운</span>\n      </div>\n      <div className=\"touch-bar\">\n        <span>거친</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar now={(touchData.roughness / 5) * 100} style={{ backgroundColor: getBarColor(touchData.roughness) }} />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n        <span>매끄러운</span>\n      </div>\n      <div className=\"touch-bar\">\n        <span>얇은</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar now={(touchData.thickness / 5) * 100} style={{ backgroundColor: getBarColor(touchData.thickness) }} />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n        <span>두꺼운</span>\n      </div>\n      <div className=\"touch-bar\">\n        <span>신축성 없는</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar now={(touchData.elasticity / 5) * 100} style={{ backgroundColor: getBarColor(touchData.elasticity) }} />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n        <span>신축성 있는</span>\n      </div>\n    </div>\n  );\n};\n\nexport default TouchInfo;\n","__webpack_require__.h = () => (\"257862fea90eab7d9d61\")"],"names":["React","ProgressBar","TouchInfo","touchData","hardness","roughness","thickness","elasticity","getBarColor","score","createElement","className","now","style","backgroundColor","_toConsumableArray","Array","map","_","i","key","left","concat"],"sourceRoot":""}