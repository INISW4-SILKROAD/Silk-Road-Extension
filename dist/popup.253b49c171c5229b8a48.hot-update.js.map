{"version":3,"file":"popup.253b49c171c5229b8a48.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACO;AAChC;AACqB;AAE/C,IAAMM,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAAC,UAAA,GAAeJ,2DAAS,CAAC,CAAC;IAAlBK,EAAE,GAAAD,UAAA,CAAFC,EAAE;EACV,IAAMC,QAAQ,GAAGL,6DAAW,CAAC,CAAC;EAC9B,IAAAM,SAAA,GAA8BR,+CAAQ,CAAC,IAAI,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BV,gDAAS,CAAC,YAAM;IACdc,KAAK,gCAAAC,MAAA,CAAgCR,EAAE,CAAE,CAAC,CACvCS,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,IAAI;MAAA,OAAKN,UAAU,CAACM,IAAI,CAAC;IAAA,EAAC,SAC3B,CAAC,UAACC,KAAK;MAAA,OAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAAA,EAAC;EACtE,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,IAAI,CAACK,OAAO,EAAE;IACZ,oBAAOb,0DAAA,cAAK,YAAe,CAAC;EAC9B;EAGA,oBACEA,0DAAA;IAAKwB,SAAS,EAAC;EAAkB,gBAC/BxB,0DAAA;IAAKwB,SAAS,EAAC;EAAQ,gBACrBxB,0DAAA;IAAQwB,SAAS,EAAC,aAAa;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMhB,QAAQ,CAAC,GAAG,CAAC;IAAA;EAAC,CAAS,CACnE,CAAC,eACNT,0DAAA;IAAKwB,SAAS,EAAC;EAAiB,gBAC9BxB,0DAAA;IAAK0B,GAAG,EAAE,gBAAiB;IAACC,GAAG,EAAEd,OAAO,CAACe;EAAK,CAAE,CAC7C,CAAC,eACN5B,0DAAA;IAAKwB,SAAS,EAAC;EAAc,gBAC3BxB,0DAAA;IAAIwB,SAAS,EAAC;EAAc,GAAEX,OAAO,CAACe,IAAS,CAAC,eAChD5B,0DAAA;IAAGwB,SAAS,EAAC;EAAO,GAAEX,OAAO,CAACgB,KAAK,EAAC,SAAK,CACtC,CAAC,eACN7B,0DAAA;IAAKwB,SAAS,EAAC;EAAwB,gBACrCxB,0DAAA,CAACK,6DAAS,MAAE,CACT,CAAC,eACNL,0DAAA;IAAQwB,SAAS,EAAC,qBAAqB;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMK,MAAM,CAACC,IAAI,CAAClB,OAAO,CAACmB,IAAI,EAAE,QAAQ,CAAC;IAAA;EAAC,GAAC,uCAAe,CACxG,CAAC;AAEV,CAAC;AAED,iEAAe1B,MAAM;;;;;;;;;;;;;;;;;;+CCzCrB,qJAAA2B,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAApE,IAAA,WAAAkB,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAhD,IAAA,WAAAkB,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAA+C,2BAAA,eAAApD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAnB,IAAA,CAAAqE,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA1B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,QAAAoB,KAAA,sCAAA9C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAqD,IAAA,eAAAjD,CAAA,CAAAkD,MAAA,GAAA7C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAmD,QAAA,MAAA1C,CAAA,QAAAE,CAAA,GAAAyC,mBAAA,CAAA3C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAkD,MAAA,EAAAlD,CAAA,CAAAqD,IAAA,GAAArD,CAAA,CAAAsD,KAAA,GAAAtD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAkD,MAAA,QAAAhD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAuD,iBAAA,CAAAvD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAkD,MAAA,IAAAlD,CAAA,CAAAwD,MAAA,WAAAxD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAiD,IAAA,GAAApB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAAyB,IAAA,EAAAjD,CAAA,CAAAiD,IAAA,kBAAAhB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAkD,MAAA,YAAAlD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA4B,oBAAAzD,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAqD,MAAA,EAAAhD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAsD,QAAA,qBAAAnD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAqD,MAAA,aAAArD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAwD,mBAAA,CAAAzD,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAqD,MAAA,kBAAAlD,CAAA,KAAAH,CAAA,CAAAqD,MAAA,YAAArD,CAAA,CAAA2B,GAAA,OAAAiC,SAAA,uCAAAzD,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAqD,MAAA,YAAArD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAsD,QAAA,SAAArB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA0C,IAAA,IAAApD,CAAA,CAAAF,CAAA,CAAA+D,UAAA,IAAAnD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA8D,IAAA,GAAAhE,CAAA,CAAAiE,OAAA,eAAA/D,CAAA,CAAAqD,MAAA,KAAArD,CAAA,CAAAqD,MAAA,WAAArD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAsD,QAAA,SAAArB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAqD,MAAA,YAAArD,CAAA,CAAA2B,GAAA,OAAAiC,SAAA,sCAAA5D,CAAA,CAAAsD,QAAA,SAAArB,CAAA,cAAA+B,aAAAjE,CAAA,QAAAD,CAAA,KAAAmE,MAAA,EAAAlE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAoE,QAAA,GAAAnE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAqE,UAAA,GAAApE,CAAA,KAAAD,CAAA,CAAAsE,QAAA,GAAArE,CAAA,WAAAsE,UAAA,CAAAC,IAAA,CAAAxE,CAAA,cAAAyE,cAAAxE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAAyE,UAAA,QAAA1E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAAyE,UAAA,GAAA1E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAsE,UAAA,MAAAJ,MAAA,aAAAlE,CAAA,CAAA4C,OAAA,CAAAqB,YAAA,cAAAS,KAAA,iBAAAjC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAgE,IAAA,SAAAhE,CAAA,OAAA4E,KAAA,CAAA5E,CAAA,CAAA6E,MAAA,SAAAtE,CAAA,OAAAG,CAAA,YAAAsD,KAAA,aAAAzD,CAAA,GAAAP,CAAA,CAAA6E,MAAA,OAAAxE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAAyD,IAAA,CAAAvD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAAyD,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAvD,KAAA,GAAAR,CAAA,EAAA+D,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAtD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,gBAAAoD,SAAA,CAAAb,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA0C,WAAA,GAAA5D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAA+E,mBAAA,aAAA9E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAA+E,WAAA,WAAAhF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA8E,WAAA,IAAA9E,CAAA,CAAAiF,IAAA,OAAAjF,CAAA,CAAAkF,IAAA,aAAAjF,CAAA,WAAAE,MAAA,CAAAgF,cAAA,GAAAhF,MAAA,CAAAgF,cAAA,CAAAlF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAmF,SAAA,GAAA/C,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAqF,KAAA,aAAApF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAsF,KAAA,aAAArF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA6E,OAAA,OAAA3E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAA+E,mBAAA,CAAA7E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAoD,IAAA,GAAAjF,IAAA,WAAAkB,CAAA,WAAAA,CAAA,CAAAqD,IAAA,GAAArD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAoD,IAAA,WAAApB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAwF,IAAA,aAAAvF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAsE,IAAA,CAAAnE,CAAA,UAAAH,CAAA,CAAAuF,OAAA,aAAAzB,KAAA,WAAA9D,CAAA,CAAA2E,MAAA,SAAA5E,CAAA,GAAAC,CAAA,CAAAwF,GAAA,QAAAzF,CAAA,IAAAD,CAAA,SAAAgE,IAAA,CAAAvD,KAAA,GAAAR,CAAA,EAAA+D,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAhE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA4E,WAAA,EAAAvD,OAAA,EAAAkD,KAAA,WAAAA,MAAA3E,CAAA,aAAA2F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA1D,CAAA,OAAAqD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA1B,GAAA,GAAA5B,CAAA,OAAAsE,UAAA,CAAA1B,OAAA,CAAA4B,aAAA,IAAAzE,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA0F,MAAA,OAAAvF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA0E,KAAA,EAAA1E,CAAA,CAAA2F,KAAA,cAAA3F,CAAA,IAAAD,CAAA,MAAA6F,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAArD,CAAA,QAAAsE,UAAA,IAAAG,UAAA,kBAAAzE,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAkE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA5D,CAAA,aAAAsD,IAAA,QAAAtD,CAAA,MAAAE,CAAA,kBAAA8F,OAAA3F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA8D,IAAA,GAAA3D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAqD,MAAA,WAAArD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAgE,UAAA,CAAAM,MAAA,MAAAtE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA6D,UAAA,CAAAhE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAgE,UAAA,iBAAAhE,CAAA,CAAAyD,MAAA,SAAA6B,MAAA,aAAAtF,CAAA,CAAAyD,MAAA,SAAAwB,IAAA,QAAA7E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA2E,IAAA,GAAAjF,CAAA,CAAA0D,QAAA,SAAA4B,MAAA,CAAAtF,CAAA,CAAA0D,QAAA,gBAAAuB,IAAA,GAAAjF,CAAA,CAAA2D,UAAA,SAAA2B,MAAA,CAAAtF,CAAA,CAAA2D,UAAA,cAAAvD,CAAA,aAAA6E,IAAA,GAAAjF,CAAA,CAAA0D,QAAA,SAAA4B,MAAA,CAAAtF,CAAA,CAAA0D,QAAA,qBAAApD,CAAA,QAAAqC,KAAA,qDAAAsC,IAAA,GAAAjF,CAAA,CAAA2D,UAAA,SAAA2B,MAAA,CAAAtF,CAAA,CAAA2D,UAAA,YAAAR,MAAA,WAAAA,OAAA5D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAqE,UAAA,CAAAM,MAAA,MAAA3E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAgE,UAAA,CAAArE,CAAA,OAAAK,CAAA,CAAA4D,MAAA,SAAAwB,IAAA,IAAAtF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAoF,IAAA,GAAApF,CAAA,CAAA8D,UAAA,QAAA3D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAAyD,MAAA,IAAAnE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA2D,UAAA,KAAA3D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAgE,UAAA,cAAA9D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA6C,MAAA,gBAAAS,IAAA,GAAAtD,CAAA,CAAA2D,UAAA,EAAAlC,CAAA,SAAA8D,QAAA,CAAArF,CAAA,MAAAqF,QAAA,WAAAA,SAAAhG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAoC,IAAA,GAAA/D,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAmE,IAAA,QAAAlE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA0B,MAAA,kBAAAS,IAAA,yBAAA/D,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAgE,IAAA,GAAAhE,CAAA,GAAAmC,CAAA,KAAA+D,MAAA,WAAAA,OAAAjG,CAAA,aAAAD,CAAA,QAAAuE,UAAA,CAAAM,MAAA,MAAA7E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAqE,UAAA,CAAAvE,CAAA,OAAAE,CAAA,CAAAmE,UAAA,KAAApE,CAAA,cAAAgG,QAAA,CAAA/F,CAAA,CAAAwE,UAAA,EAAAxE,CAAA,CAAAoE,QAAA,GAAAG,aAAA,CAAAvE,CAAA,GAAAiC,CAAA,yBAAAgE,OAAAlG,CAAA,aAAAD,CAAA,QAAAuE,UAAA,CAAAM,MAAA,MAAA7E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAqE,UAAA,CAAAvE,CAAA,OAAAE,CAAA,CAAAiE,MAAA,KAAAlE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAwE,UAAA,kBAAArE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA4C,aAAA,CAAAvE,CAAA,YAAAK,CAAA,YAAA8C,KAAA,8BAAA+C,aAAA,WAAAA,cAAApG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAmD,QAAA,KAAA3C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAA+D,UAAA,EAAA7D,CAAA,EAAA+D,OAAA,EAAA5D,CAAA,oBAAAkD,MAAA,UAAA1B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAqG,mBAAAhG,CAAA,EAAAJ,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAK,CAAA,EAAAK,CAAA,EAAAE,CAAA,cAAAJ,CAAA,GAAAL,CAAA,CAAAO,CAAA,EAAAE,CAAA,GAAAE,CAAA,GAAAN,CAAA,CAAAD,KAAA,WAAAJ,CAAA,gBAAAL,CAAA,CAAAK,CAAA,KAAAK,CAAA,CAAA4C,IAAA,GAAArD,CAAA,CAAAe,CAAA,IAAAuE,OAAA,CAAArC,OAAA,CAAAlC,CAAA,EAAAjC,IAAA,CAAAmB,CAAA,EAAAK,CAAA;AAAA,SAAA+F,kBAAAjG,CAAA,6BAAAJ,CAAA,SAAAD,CAAA,GAAAuG,SAAA,aAAAhB,OAAA,WAAArF,CAAA,EAAAK,CAAA,QAAAK,CAAA,GAAAP,CAAA,CAAAmG,KAAA,CAAAvG,CAAA,EAAAD,CAAA,YAAAyG,MAAApG,CAAA,IAAAgG,kBAAA,CAAAzF,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAAkG,KAAA,EAAAC,MAAA,UAAArG,CAAA,cAAAqG,OAAArG,CAAA,IAAAgG,kBAAA,CAAAzF,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAAkG,KAAA,EAAAC,MAAA,WAAArG,CAAA,KAAAoG,KAAA;AAAA,SAAA/H,eAAAwB,CAAA,EAAAF,CAAA,WAAA2G,eAAA,CAAAzG,CAAA,KAAA0G,qBAAA,CAAA1G,CAAA,EAAAF,CAAA,KAAA6G,2BAAA,CAAA3G,CAAA,EAAAF,CAAA,KAAA8G,gBAAA;AAAA,SAAAA,iBAAA,cAAAhD,SAAA;AAAA,SAAA+C,4BAAA3G,CAAA,EAAAU,CAAA,QAAAV,CAAA,2BAAAA,CAAA,SAAA6G,iBAAA,CAAA7G,CAAA,EAAAU,CAAA,OAAAX,CAAA,MAAA+G,QAAA,CAAAlF,IAAA,CAAA5B,CAAA,EAAA2F,KAAA,6BAAA5F,CAAA,IAAAC,CAAA,CAAA8E,WAAA,KAAA/E,CAAA,GAAAC,CAAA,CAAA8E,WAAA,CAAAC,IAAA,aAAAhF,CAAA,cAAAA,CAAA,GAAAgH,KAAA,CAAAC,IAAA,CAAAhH,CAAA,oBAAAD,CAAA,+CAAAkH,IAAA,CAAAlH,CAAA,IAAA8G,iBAAA,CAAA7G,CAAA,EAAAU,CAAA;AAAA,SAAAmG,kBAAA7G,CAAA,EAAAU,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAV,CAAA,CAAA2E,MAAA,MAAAjE,CAAA,GAAAV,CAAA,CAAA2E,MAAA,YAAA7E,CAAA,MAAAK,CAAA,GAAA4G,KAAA,CAAArG,CAAA,GAAAZ,CAAA,GAAAY,CAAA,EAAAZ,CAAA,IAAAK,CAAA,CAAAL,CAAA,IAAAE,CAAA,CAAAF,CAAA,UAAAK,CAAA;AAAA,SAAAuG,sBAAA1G,CAAA,EAAA8B,CAAA,QAAA/B,CAAA,WAAAC,CAAA,gCAAAS,MAAA,IAAAT,CAAA,CAAAS,MAAA,CAAAE,QAAA,KAAAX,CAAA,4BAAAD,CAAA,QAAAD,CAAA,EAAAK,CAAA,EAAAK,CAAA,EAAAM,CAAA,EAAAJ,CAAA,OAAAqB,CAAA,OAAA1B,CAAA,iBAAAG,CAAA,IAAAT,CAAA,GAAAA,CAAA,CAAA6B,IAAA,CAAA5B,CAAA,GAAA8D,IAAA,QAAAhC,CAAA,QAAA7B,MAAA,CAAAF,CAAA,MAAAA,CAAA,UAAAgC,CAAA,uBAAAA,CAAA,IAAAjC,CAAA,GAAAU,CAAA,CAAAoB,IAAA,CAAA7B,CAAA,GAAAqD,IAAA,MAAA1C,CAAA,CAAA4D,IAAA,CAAAxE,CAAA,CAAAS,KAAA,GAAAG,CAAA,CAAAiE,MAAA,KAAA7C,CAAA,GAAAC,CAAA,iBAAA/B,CAAA,IAAAK,CAAA,OAAAF,CAAA,GAAAH,CAAA,yBAAA+B,CAAA,YAAAhC,CAAA,eAAAe,CAAA,GAAAf,CAAA,cAAAE,MAAA,CAAAa,CAAA,MAAAA,CAAA,2BAAAT,CAAA,QAAAF,CAAA,aAAAO,CAAA;AAAA,SAAA+F,gBAAAzG,CAAA,QAAA+G,KAAA,CAAAG,OAAA,CAAAlH,CAAA,UAAAA,CAAA;AADA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGmD;AACrB;AAE9B,IAAMmH,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAyB;EAAA,IAAnBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EAC/B,IAAA/I,SAAA,GAA0BR,+CAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BgJ,KAAK,GAAA/I,UAAA;IAAEgJ,QAAQ,GAAAhJ,UAAA;EAEtBV,gDAAS,CAAC,YAAM;IACd,IAAM2J,SAAS;MAAA,IAAAC,KAAA,GAAArB,iBAAA,eAAAvG,mBAAA,GAAAmF,IAAA,CAAG,SAAA0C,QAAA;QAAA,OAAA7H,mBAAA,GAAAuB,IAAA,UAAAuG,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAnC,IAAA,GAAAmC,QAAA,CAAA9D,IAAA;YAAA;cAChB,IAAI+D,MAAM,IAAIA,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE;gBAC1DF,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;kBAAEC,MAAM,EAAE;gBAAa,CAAC,EAAE,UAAClJ,QAAQ,EAAK;kBACjE,IAAIA,QAAQ,IAAIA,QAAQ,CAACG,KAAK,EAAE;oBAC9BC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEH,QAAQ,CAACG,KAAK,CAAC;kBACxD,CAAC,MAAM,IAAIH,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE;oBACpCuI,QAAQ,CAACR,KAAK,CAACG,OAAO,CAACpI,QAAQ,CAACE,IAAI,CAAC,GAAGF,QAAQ,CAACE,IAAI,GAAG,EAAE,CAAC;kBAC7D;gBACF,CAAC,CAAC;cACJ,CAAC,MAAM;gBACLE,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;cACvC;YAAC;YAAA;cAAA,OAAA2I,QAAA,CAAAhC,IAAA;UAAA;QAAA,GAAA8B,OAAA;MAAA,CACF;MAAA,gBAZKF,SAASA,CAAA;QAAA,OAAAC,KAAA,CAAAnB,KAAA,OAAAD,SAAA;MAAA;IAAA,GAYd;IACDmB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5J,0DAAA;IAAKwB,SAAS,EAAC;EAAsB,gBACnCxB,0DAAA;IAAKwB,SAAS,EAAC;EAAkB,gBAC/BxB,0DAAA;IAAQwB,SAAS,EAAC;EAAiB,GAAC,0BAAY,CAAC,eACjDxB,0DAAA;IAAQwB,SAAS,EAAC;EAAiB,GAAC,0BAAY,CAAC,eACjDxB,0DAAA;IAAQwB,SAAS,EAAC;EAAiB,GAAC,cAAU,CAAC,eAC/CxB,0DAAA;IAAQwB,SAAS,EAAC;EAAiB,GAAC,oBAAW,CAC5C,CAAC,eACNxB,0DAAA;IAAKwB,SAAS,EAAC;EAAY,GACxBkI,KAAK,CAACW,GAAG,CAAC,UAACC,IAAI;IAAA,oBACdtK,0DAAA;MAAKwB,SAAS,EAAC,YAAY;MAAC+I,GAAG,EAAED,IAAI,CAACzJ,OAAO,CAAC2J;IAAG,gBAC/CxK,0DAAA;MAAK0B,GAAG,EAAE4I,IAAI,CAACG,UAAW;MAAC9I,GAAG,EAAE2I,IAAI,CAACzJ,OAAO,CAACe,IAAK;MAACH,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMgI,YAAY,CAACa,IAAI,CAACzJ,OAAO,CAAC2J,EAAE,CAAC;MAAA;IAAC,CAAE,CAAC,eACnGxK,0DAAA,YAAIsK,IAAI,CAACzJ,OAAO,CAACe,IAAI,eAAC5B,0DAAA,aAAY,CAAI,CACnC,CAAC;EAAA,CACP,CACE,CACF,CAAC;AAEV,CAAC;AAED,iEAAeuJ,SAAS;;;;;;;;UClGxB","sources":["webpack://silkroad/./src/popup/Detail.jsx","webpack://silkroad/./src/popup/components/GoodsList.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './css/Detail.css';\r\nimport TouchInfo from './components/TouchInfo';\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5001/goods/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setProduct(data))\r\n      .catch((error) => console.error('Error fetching product:', error));\r\n  }, [id]);\r\n\r\n  if (!product) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"detail-container\">\r\n      <div className=\"navbar\">\r\n        <button className=\"back-button\" onClick={() => navigate('/')}></button>\r\n      </div>\r\n      <div className=\"image-container\">\r\n        <img src={'./sample2.jpeg'} alt={product.NAME} />\r\n      </div>\r\n      <div className=\"product-info\">\r\n        <h1 className=\"product-name\">{product.NAME}</h1>\r\n        <p className=\"price\">{product.PRICE} 원</p>\r\n      </div>\r\n      <div className=\"tactile-info-container\">\r\n        <TouchInfo />\r\n      </div>\r\n      <button className=\"view-product-button\" onClick={() => window.open(product.LINK, '_blank')}>상품 보러가기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","// import React, { useEffect, useState } from 'react';\r\n// import '../css/GoodsList.css';\r\n\r\n// const GoodsList = ({ onImageClick }) => {\r\n//   const [goods, setGoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\r\n//         // 크롬 확장 프로그램 환경\r\n//         chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\r\n//           if (response && response.error) {\r\n//             console.error('Error fetching goods:', response.error);\r\n//           } else if (response && response.data) {\r\n//             setGoods(Array.isArray(response.data) ? response.data : []);\r\n//           }\r\n//         });\r\n//       } else {\r\n//         // 로컬 개발 환경\r\n//         try {\r\n//           const response = await fetch('http://127.0.0.1:5001/goods');\r\n//           const data = await response.json();\r\n//           setGoods(Array.isArray(data) ? data : []);\r\n//         } catch (error) {\r\n//           console.error('Error fetching goods:', error);\r\n//         }\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n\r\n//   return (\r\n//     <div className=\"goods-list-container\">\r\n//       <div className=\"category-buttons\">\r\n//         <button className=\"category-button\">부드러움</button>\r\n//         <button className=\"category-button\">매끄러움</button>\r\n//         <button className=\"category-button\">두께</button>\r\n//         <button className=\"category-button\">신축성</button>\r\n//       </div>\r\n//       <div className=\"goods-list\">\r\n//         {goods.map((item) => (\r\n//           <div className=\"goods-item\" key={item.ID}>\r\n//             <img src={\"./sample2.jpeg\"} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\r\n//             <p>{item.NAME}<span></span></p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GoodsList;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../css/GoodsList.css';\r\n\r\nconst GoodsList = ({ onImageClick }) => {\r\n  const [goods, setGoods] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\r\n        chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\r\n          if (response && response.error) {\r\n            console.error('Error fetching goods:', response.error);\r\n          } else if (response && response.data) {\r\n            setGoods(Array.isArray(response.data) ? response.data : []);\r\n          }\r\n        });\r\n      } else {\r\n        console.error('크롬 확장 프로그램 환경이 아닙니다.');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"goods-list-container\">\r\n      <div className=\"category-buttons\">\r\n        <button className=\"category-button\">부드러움</button>\r\n        <button className=\"category-button\">매끄러움</button>\r\n        <button className=\"category-button\">두께</button>\r\n        <button className=\"category-button\">신축성</button>\r\n      </div>\r\n      <div className=\"goods-list\">\r\n        {goods.map((item) => (\r\n          <div className=\"goods-item\" key={item.product.ID}>\r\n            <img src={item.image_path} alt={item.product.NAME} onClick={() => onImageClick(item.product.ID)} />\r\n            <p>{item.product.NAME}<span></span></p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoodsList;\r\n","__webpack_require__.h = () => (\"6f751f52c2e507e05dab\")"],"names":["React","useEffect","useState","useParams","useNavigate","TouchInfo","Detail","_useParams","id","navigate","_useState","_useState2","_slicedToArray","product","setProduct","fetch","concat","then","response","json","data","error","console","createElement","className","onClick","src","alt","NAME","PRICE","window","open","LINK","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","Array","from","test","isArray","GoodsList","_ref","onImageClick","goods","setGoods","fetchData","_ref2","_callee","_callee$","_context","chrome","runtime","sendMessage","action","map","item","key","ID","image_path"],"sourceRoot":""}