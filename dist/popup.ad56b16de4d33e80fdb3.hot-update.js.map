{"version":3,"file":"popup.ad56b16de4d33e80fdb3.hot-update.js","mappings":"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","sources":["webpack://silkroad/./src/popup/components/GoodsList.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import '../css/GoodsList.css';\r\n\r\n// const GoodsList = ({ onImageClick }) => {\r\n//   const [goods, setGoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\r\n//         // 크롬 확장 프로그램 환경\r\n//         chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\r\n//           if (response && response.error) {\r\n//             console.error('Error fetching goods:', response.error);\r\n//           } else if (response && response.data) {\r\n//             setGoods(Array.isArray(response.data) ? response.data : []);\r\n//           }\r\n//         });\r\n//       } else {\r\n//         // 로컬 개발 환경\r\n//         try {\r\n//           const response = await fetch('http://127.0.0.1:5001/goods');\r\n//           const data = await response.json();\r\n//           setGoods(Array.isArray(data) ? data : []);\r\n//         } catch (error) {\r\n//           console.error('Error fetching goods:', error);\r\n//         }\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n\r\n//   return (\r\n//     <div className=\"goods-list-container\">\r\n//       <div className=\"category-buttons\">\r\n//         <button className=\"category-button\">부드러움</button>\r\n//         <button className=\"category-button\">매끄러움</button>\r\n//         <button className=\"category-button\">두께</button>\r\n//         <button className=\"category-button\">신축성</button>\r\n//       </div>\r\n//       <div className=\"goods-list\">\r\n//         {goods.map((item) => (\r\n//           <div className=\"goods-item\" key={item.ID}>\r\n//             <img src={\"./sample2.jpeg\"} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\r\n//             <p>{item.NAME}<span></span></p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GoodsList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import '../css/GoodsList.css';\r\n\r\n// const GoodsList = ({ onImageClick }) => {\r\n//   const [goods, setGoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\r\n//         chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\r\n//           if (response && response.error) {\r\n//             console.error('Error fetching goods:', response.error);\r\n//           } else if (response && response.data) {\r\n//             setGoods(Array.isArray(response.data) ? response.data : []);\r\n//           }\r\n//         });\r\n//       } else {\r\n//         console.error('크롬 확장 프로그램 환경이 아닙니다.');\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"goods-list-container\">\r\n//       <div className=\"category-buttons\">\r\n//         <button className=\"category-button\">부드러움</button>\r\n//         <button className=\"category-button\">매끄러움</button>\r\n//         <button className=\"category-button\">두께</button>\r\n//         <button className=\"category-button\">신축성</button>\r\n//       </div>\r\n//       <div className=\"goods-list\">\r\n//         {goods.map((item) => (\r\n//           <div className=\"goods-item\" key={item.product.ID}>\r\n//             <img src={`http://127.0.0.1:5001/images/${item.product.ID}`} alt={item.product.NAME} onClick={() => onImageClick(item.product.ID)} />\r\n//             <p>{item.product.NAME}<span></span></p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GoodsList;\r\n\r\n\r\nconst express = require('express');\r\nconst mysql = require('mysql');\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\nconst axios = require('axios');\r\n\r\nconst app = express();\r\nconst port = 5001;\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\nconst connection = mysql.createConnection({\r\n  host: '13.75.124.149',\r\n  user: 'root',\r\n  password: 'rlaehdehd20',\r\n  database: 'service',\r\n});\r\n\r\nconnection.connect((err) => {\r\n  if (err) {\r\n    console.error('MySQL 연결 오류:', err);\r\n    return;\r\n  }\r\n  console.log('MySQL 연결 성공 !');\r\n});\r\n\r\n// 상품과 이미지를 가져오는 엔드포인트\r\napp.get('/goods', (req, res) => {\r\n  const query = `\r\n    SELECT sg.*, i.PATH AS image_path\r\n    FROM service_goods sg\r\n    LEFT JOIN image i ON sg.ID = i.GID\r\n    WHERE i.IID = (\r\n      SELECT MIN(i2.IID)\r\n      FROM image i2\r\n      WHERE i2.GID = sg.ID\r\n    )\r\n  `;\r\n\r\n  connection.query(query, (err, results) => {\r\n    if (err) {\r\n      console.error('상품 불러오기 오류:', err);\r\n      res.status(500).json({ error: '상품 불러오기 오류' });\r\n      return;\r\n    }\r\n    res.json(results);\r\n  });\r\n});\r\n\r\napp.get('/goods/:id', (req, res) => {\r\n  const id = req.params.id;\r\n  const query = `\r\n    SELECT sg.*, i.PATH \r\n    FROM service_goods sg\r\n    LEFT JOIN image i ON sg.ID = i.GID\r\n    WHERE sg.ID = ?\r\n  `;\r\n\r\n  connection.query(query, [id], (err, results) => {\r\n    if (err) {\r\n      console.error('상품 불러오기 오류:', err);\r\n      res.status(500).json({ error: '상품 불러오기 오류' });\r\n      return;\r\n    }\r\n    if (results.length === 0) {\r\n      res.status(404).json({ error: '상품을 찾을 수 없음' });\r\n      return;\r\n    }\r\n\r\n    const product = {\r\n      ID: results[0].ID,\r\n      NAME: results[0].NAME,\r\n      PRICE: results[0].PRICE,\r\n      LINK: results[0].LINK,\r\n      SOFTNESS: results[0].SOFTNESS,\r\n      THICKNESS: results[0].THICKNESS,\r\n      SMOOTHNESS: results[0].SMOOTHNESS,\r\n      FLEXIBILITY: results[0].FLEXIBILITY\r\n    };\r\n    const images = results.map(result => result.PATH);\r\n\r\n    res.json({ product, images });\r\n  });\r\n});\r\n\r\napp.post('/submit', async (req, res) => {\r\n  const { imageUrl, pageUrl } = req.body;\r\n\r\n  if (!imageUrl || !pageUrl) {\r\n    res.status(400).json({ error: '잘못된 데이터' });\r\n    return;\r\n  }\r\n\r\n  console.log(`Received image URL: ${imageUrl}`);\r\n  console.log(`Received page URL: ${pageUrl}`);\r\n\r\n  try {\r\n    const flaskResponse = await axios.post('http://127.0.0.1:5002/search', { image_url: imageUrl });\r\n    const searchResults = flaskResponse.data;\r\n\r\n    console.log('Flask 서버로부터 받은 검색 결과:', searchResults);\r\n\r\n    const gids = searchResults.map(result => result.gid);\r\n    if (gids.length === 0) {\r\n      res.status(404).json({ error: '검색 결과에서 일치하는 상품을 찾을 수 없음' });\r\n      return;\r\n    }\r\n\r\n    const placeholders = gids.map(() => '?').join(',');\r\n    const query = `SELECT * FROM service_goods WHERE ID IN (${placeholders})`;\r\n\r\n    connection.query(query, gids, (err, results) => {\r\n      if (err) {\r\n        console.error('상품 불러오기 오류:', err);\r\n        res.status(500).json({ error: '상품 불러오기 오류' });\r\n        return;\r\n      }\r\n\r\n      const combinedResults = searchResults.map(result => ({\r\n        ...result,\r\n        product: results.find(item => item.ID === result.gid) || null\r\n      }));\r\n\r\n      res.status(200).json(combinedResults);\r\n    });\r\n  } catch (error) {\r\n    console.error('Flask 서버로부터 검색 결과를 받는 중 오류 발생:', error);\r\n    res.status(500).json({ error: 'Flask 서버로부터 검색 결과를 받는 중 오류 발생' });\r\n  }\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server running at http://127.0.0.1:${port}`);\r\n});\r\n\r\n","__webpack_require__.h = () => (\"91f2f8e794be516d070d\")"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","asyncGeneratorStep","_asyncToGenerator","_next","_throw","express","require","mysql","cors","bodyParser","axios","app","port","use","json","connection","createConnection","host","user","password","database","connect","err","console","error","log","get","req","res","query","results","status","id","params","product","ID","NAME","PRICE","LINK","SOFTNESS","THICKNESS","SMOOTHNESS","FLEXIBILITY","images","map","result","PATH","post","_ref","_callee","_req$body","imageUrl","pageUrl","flaskResponse","searchResults","gids","placeholders","_callee$","_context","body","concat","image_url","data","gid","join","combinedResults","find","item","t0","_x","_x2","listen"],"sourceRoot":""}