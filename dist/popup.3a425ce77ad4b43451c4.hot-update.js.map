{"version":3,"file":"popup.3a425ce77ad4b43451c4.hot-update.js","mappings":"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","sources":["webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport '../css/TouchInfo.css';\n\nconst TouchInfo = () => {\n  // 임시로 사용할 촉감 데이터 (1~5점)\n  const touchData = {\n    softness: 5, // 부드러움\n    smoothness: 3, // 매끄러움\n    thickness: 4, // 두꺼움\n    flexibility: 2, // 신축성\n  };\n\n  // 점수에 따른 색상 설정\n  const getBarColor = (score, color) => {\n    const opacity = score / 5;\n    const hexOpacity = Math.round(opacity * 255).toString(16).padStart(2, '0');\n    return `${color}${hexOpacity}`;\n  };\n\n  // 촉감별 대표 색상 설정\n  const colorMapping = {\n    softness: '#FF6984', \n    smoothness: '#5CC0FF', \n    thickness: '#AFFF7D', \n    flexibility: '#e4c1f9' \n  };\n\n  return (\n    <div className=\"touch-info\">\n      <div className='touch-info-text'>\n      <h2>촉감 정보</h2>\n      </div>\n      <div className='touch-area'>\n      <div className=\"touch-bar\">\n        <span>부드러움</span>\n        <div className=\"progress-bar-wrapper\">\n        <ProgressBar\n            now={(touchData.softness / 5) * 100}\n            className=\"custom-progress-bar\"\n            style={{\n              backgroundColor: 'transparent',\n              backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.softness, colorMapping.softness)} 0%, ${getBarColor(touchData.softness, colorMapping.softness)} ${(touchData.softness / 5) * 100}%, #ffffff ${(touchData.softness / 5) * 100}%, #ffffff 100%)`\n            }}\n          />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"touch-bar\">\n        <span>매끄러움</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar\n            now={(touchData.smoothness / 5) * 100}\n            className=\"custom-progress-bar\"\n            style={{\n              backgroundColor: 'transparent',\n              backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.smoothness, colorMapping.smoothness)} 0%, ${getBarColor(touchData.smoothness, colorMapping.smoothness)} ${(touchData.smoothness / 5) * 100}%, #ffffff ${(touchData.smoothness / 5) * 100}%, #ffffff 100%)`\n            }}\n          />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"touch-bar\">\n        <span>두께</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar\n            now={(touchData.thickness / 5) * 100}\n            className=\"custom-progress-bar\"\n            style={{\n              backgroundColor: 'transparent',\n              backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.thickness, colorMapping.thickness)} 0%, ${getBarColor(touchData.thickness, colorMapping.thickness)} ${(touchData.thickness / 5) * 100}%, #ffffff ${(touchData.thickness / 5) * 100}%, #ffffff 100%)`\n            }}\n          />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"touch-bar\">\n        <span>신축성</span>\n        <div className=\"progress-bar-wrapper\">\n          <ProgressBar\n            now={(touchData.flexibility / 5) * 100}\n            className=\"custom-progress-bar\"\n            style={{\n              backgroundColor: 'transparent',\n              backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.flexibility, colorMapping.flexibility)} 0%, ${getBarColor(touchData.flexibility, colorMapping.flexibility)} ${(touchData.flexibility / 5) * 100}%, #ffffff ${(touchData.flexibility / 5) * 100}%, #ffffff 100%)`\n            }}\n          />\n          <div className=\"ticks\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n            ))}\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TouchInfo;\n","__webpack_require__.h = () => (\"74729a3c39296d9e8b4f\")"],"names":["React","ProgressBar","TouchInfo","touchData","softness","smoothness","thickness","flexibility","getBarColor","score","color","opacity","hexOpacity","Math","round","toString","padStart","concat","colorMapping","createElement","className","now","style","backgroundColor","backgroundImage","_toConsumableArray","Array","map","_","i","key","left"],"sourceRoot":""}