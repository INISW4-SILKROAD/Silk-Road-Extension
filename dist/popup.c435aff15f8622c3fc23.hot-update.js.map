{"version":3,"file":"popup.c435aff15f8622c3fc23.hot-update.js","mappings":"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","sources":["webpack://silkroad/./src/popup/components/GoodsList.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import '../css/GoodsList.css';\n\n// const GoodsList = ({ onImageClick }) => {\n//   const [goods, setGoods] = useState([]);\n\n//   useEffect(() => {\n//     if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n//       // 크롬 확장 프로그램 환경\n//       chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n//         if (response && response.error) {\n//           console.error('Error fetching goods:', response.error);\n//         } else if (response && response.data) {\n//           setGoods(response.data);\n//         }\n//       });\n//     } else {\n//       // 로컬 개발 환경\n//       fetch('http://localhost:5001/goods')\n//         .then((response) => response.json())\n//         .then((data) => setGoods(data))\n//         .catch((error) => console.error('Error fetching goods:', error));\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"goods-list-container\">\n//       <div className=\"category-buttons\">\n//         <button className=\"category-button\">부드러움</button>\n//         <button className=\"category-button\">매끄러움</button>\n//         <button className=\"category-button\">두꺼움</button>\n//         <button className=\"category-button\">신축성</button>\n//       </div>\n//       <div className=\"goods-list\">\n//         {goods.map((item) => (\n//           <div className=\"goods-item\" key={item.ID}>\n//             <img src={'/sample.png'} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n//             <p>{item.NAME}<span></span></p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GoodsList;\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import '../css/GoodsList.css';\n\n// const GoodsList = ({ onImageClick }) => {\n//   const [goods, setGoods] = useState([]);\n\n  \n//   useEffect(() => {\n//     if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n//       // 크롬 확장 프로그램 환경\n//       chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n//         if (response && response.error) {\n//           console.error('Error fetching goods:', response.error);\n//         } else if (response && response.data) {\n//           setGoods(response.data);\n//         }\n//       });\n//     } else {\n//       // 로컬 개발 환경\n//       fetch('http://localhost:5001/goods')\n//         .then((response) => response.json())\n//         .then((data) => setGoods(data))\n//         .catch((error) => console.error('Error fetching goods:', error));\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"goods-list-container\">\n//       <div className=\"category-buttons\">\n//         <button className=\"category-button\">부드러움</button>\n//         <button className=\"category-button\">매끄러움</button>\n//         <button className=\"category-button\">두꺼움</button>\n//         <button className=\"category-button\">신축성</button>\n//       </div>\n//       <div className=\"goods-list\">\n//         {goods.map((item) => (\n//           <div className=\"goods-item\" key={item.ID}>\n//             <img src={'/sample.png'} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n//             <p>{item.NAME}<span></span></p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GoodsList;\n\nimport React, { useEffect, useState } from 'react';\nimport '../css/GoodsList.css';\n\nconst GoodsList = ({ onImageClick }) => {\n  const [goods, setGoods] = useState([]);\n\n  useEffect(() => {\n    const fetchData = () => {\n      if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n        // 크롬 확장 프로그램 환경\n        chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n          if (response && response.error) {\n            console.error('Error fetching goods:', response.error);\n          } else if (response && response.data) {\n            setGoods(response.data);\n          }\n        });\n      } else {\n        // 로컬 개발 환경\n        fetch('http://localhost:5001/goods')\n          .then((response) => response.json())\n          .then((data) => setGoods(data))\n          .catch((error) => console.error('Error fetching goods:', error));\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"goods-list-container\">\n      <div className=\"category-buttons\">\n        <button className=\"category-button\">부드러움</button>\n        <button className=\"category-button\">매끄러움</button>\n        <button className=\"category-button\">두꺼움</button>\n        <button className=\"category-button\">신축성</button>\n      </div>\n      <div className=\"goods-list\">\n        {goods.map((item) => (\n          <div className=\"goods-item\" key={item.ID}>\n            <img src={'/sample.png'} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n            <p>{item.NAME}<span></span></p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GoodsList;\n","__webpack_require__.h = () => (\"0b74402e133adaadb59d\")"],"names":["React","useEffect","useState","GoodsList","_ref","onImageClick","_useState","_useState2","_slicedToArray","goods","setGoods","fetchData","chrome","runtime","sendMessage","action","response","error","console","data","fetch","then","json","createElement","className","map","item","key","ID","src","alt","NAME","onClick"],"sourceRoot":""}