{"version":3,"file":"popup.1384e3eb73c44080c0b5.hot-update.js","mappings":"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":["webpack://silkroad/./src/popup/Detail.jsx","webpack://silkroad/./src/popup/Main.jsx","webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './css/Detail.css';\nimport TouchInfo from './components/TouchInfo';\n\nconst Detail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n\n  useEffect(() => {\n    fetch(`http://localhost:5001/goods/${id}`)\n      .then((response) => response.json())\n      .then((data) => setProduct(data))\n      .catch((error) => console.error('Error fetching product:', error));\n  }, [id]);\n\n  if (!product) {\n    return <div>Loading...</div>;\n  }\n\n  \n  return (\n    <div className=\"detail-container\">\n      <div className=\"navbar\">\n        <button className=\"back-button\" onClick={() => navigate('/')}></button>\n      </div>\n      <div className=\"image-container\">\n        <img src={'./sample2.jpeg'} alt={product.NAME} />\n      </div>\n      <div className=\"product-info\">\n        <h1 className=\"product-name\">{product.NAME}</h1>\n        <p className=\"price\">{product.PRICE} 원</p>\n      </div>\n      <div className=\"tactile-info-container\">\n        <TouchInfo />\n      </div>\n      <button className=\"view-product-button\" onClick={() => window.open(product.LINK, '_blank')}>상품 보러가기</button>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport './css/Main.css';\nimport TouchInfo from './components/TouchInfo';\nimport GoodsList from './components/GoodsList';\nimport Detail from './Detail';\n\nconst Main = () => {\n  const handleImageClick = (id) => {\n    window.location.hash = `#/detail/${id}`;\n  };\n\n  return (\n    <Router>\n      <div className=\"popup-container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <>\n                <TouchInfo />\n                <GoodsList onImageClick={handleImageClick} />\n              </>\n            }\n          />\n          <Route path=\"/detail/:id\" element={<Detail />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default Main;\n","// import React from 'react';\n// import ProgressBar from 'react-bootstrap/ProgressBar';\n// import '../css/TouchInfo.css';\n\n// const TouchInfo = () => {\n//   // 임시로 사용할 촉감 데이터 (1~5점)\n//   const touchData = {\n//     softness: 5, // 부드러움\n//     smoothness: 3, // 매끄러움\n//     thickness: 4, // 두꺼움\n//     flexibility: 2, // 신축성\n//   };\n\n//   // 점수에 따른 색상 설정\n//   const getBarColor = (score, color) => {\n//     const opacity = score / 5;\n//     const hexOpacity = Math.round(opacity * 255).toString(16).padStart(2, '0');\n//     return `${color}${hexOpacity}`;\n//   };\n\n//   // 촉감별 대표 색상 설정\n//   const colorMapping = {\n//     softness: '#3A506B', \n//     smoothness: '#3A506B', \n//     thickness: '#3A506B', \n//     flexibility: '#3A506B' \n//   };\n\n//   return (\n//     <div className=\"touch-info\">\n//       <div className='touch-info-text'>\n//       <h2>촉감 정보</h2>\n//       </div>\n//       <div className='touch-area'>\n//       <div className=\"touch-bar\">\n//         <span>부드러움</span>\n//         <div className=\"progress-bar-wrapper\">\n//         <ProgressBar\n//             now={(touchData.softness / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.softness, colorMapping.softness)} 0%, ${getBarColor(touchData.softness, colorMapping.softness)} ${(touchData.softness / 5) * 100}%, #ffffff ${(touchData.softness / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>매끄러움</span>\n//         <div className=\"progress-bar-wrapper\">\n//           <ProgressBar\n//             now={(touchData.smoothness / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.smoothness, colorMapping.smoothness)} 0%, ${getBarColor(touchData.smoothness, colorMapping.smoothness)} ${(touchData.smoothness / 5) * 100}%, #ffffff ${(touchData.smoothness / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>두께</span>\n//         <div className=\"progress-bar-wrapper\">\n//           <ProgressBar\n//             now={(touchData.thickness / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.thickness, colorMapping.thickness)} 0%, ${getBarColor(touchData.thickness, colorMapping.thickness)} ${(touchData.thickness / 5) * 100}%, #ffffff ${(touchData.thickness / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"touch-bar\">\n//         <span>신축성</span>\n//         <div className=\"progress-bar-wrapper\">\n//           <ProgressBar\n//             now={(touchData.flexibility / 5) * 100}\n//             className=\"custom-progress-bar\"\n//             style={{\n//               backgroundColor: 'transparent',\n//               backgroundImage: `linear-gradient(to right, ${getBarColor(touchData.flexibility, colorMapping.flexibility)} 0%, ${getBarColor(touchData.flexibility, colorMapping.flexibility)} ${(touchData.flexibility / 5) * 100}%, #ffffff ${(touchData.flexibility / 5) * 100}%, #ffffff 100%)`\n//             }}\n//           />\n//           <div className=\"ticks\">\n//             {[...Array(6)].map((_, i) => (\n//               <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\n//             ))}\n//           </div>\n//         </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TouchInfo;\n","__webpack_require__.h = () => (\"4049bd206002c1256c60\")"],"names":["React","useEffect","useState","useParams","useNavigate","TouchInfo","Detail","_useParams","id","navigate","_useState","_useState2","_slicedToArray","product","setProduct","fetch","concat","then","response","json","data","error","console","createElement","className","onClick","src","alt","NAME","PRICE","window","open","LINK","HashRouter","Router","Route","Routes","GoodsList","Main","handleImageClick","location","hash","path","element","Fragment","onImageClick"],"sourceRoot":""}