{"version":3,"file":"background.00d1daf4bc35faf4d757.hot-update.js","mappings":";;;;;;;;AAAEA,MAAM,CAACC,OAAO,CAACC,WAAW,CAACC,WAAW,CAAC,YAAM;EAC3CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACpC,CAAC,CAAC;AAEFL,MAAM,CAACC,OAAO,CAACK,SAAS,CAACH,WAAW,CAAC,UAACI,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;EACtE,IAAIF,OAAO,CAACG,MAAM,KAAK,YAAY,EAAE;IACnCC,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI;MAAA,OAAIN,YAAY,CAAC;QAAEM,IAAI,EAAJA;MAAK,CAAC,CAAC;IAAA,EAAC,SAC/B,CAAC,UAAAC,KAAK;MAAA,OAAIP,YAAY,CAAC;QAAEO,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC,CAAC;IAAA,EAAC;;IAEzD;IACA,OAAO,IAAI;EACb;AACF,CAAC,CAAC;AAGFjB,MAAM,CAACC,OAAO,CAACK,SAAS,CAACH,WAAW,CAAC,UAACI,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;EACtE,IAAIF,OAAO,CAACG,MAAM,KAAK,YAAY,EAAE;IACnCC,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB,IAAI,CAACA,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAON,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAC,UAAAG,IAAI;MAAA,OAAIN,YAAY,CAAC;QAAEM,IAAI,EAAJA;MAAK,CAAC,CAAC;IAAA,EAAC,SAC/B,CAAC,UAAAC,KAAK;MAAA,OAAIP,YAAY,CAAC;QAAEO,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC,CAAC;IAAA,EAAC;IAEzD,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC,CAAC;;;;;;;;UC/BJ","sources":["webpack://silkroad/./background.js","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["  chrome.runtime.onInstalled.addListener(() => {\n    console.log('Extension installed');\n  });\n  \n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.action === 'fetchGoods') {\n      fetch('http://13.75.124.149:5001/goods')\n        .then(response => response.json())\n        .then(data => sendResponse({ data }))\n        .catch(error => sendResponse({ error: error.message }));\n  \n      // 비동기 응답을 위해 true를 반환합니다.\n      return true;\n    }\n  });\n  \n\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.action === 'fetchGoods') {\n      fetch('http://13.75.124.149:5001/goods')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => sendResponse({ data }))\n        .catch(error => sendResponse({ error: error.message }));\n  \n      return true; // 비동기 응답을 위해 true를 반환합니다.\n    }\n  });\n  ","__webpack_require__.h = () => (\"3362ee1fd19ad05b325b\")"],"names":["chrome","runtime","onInstalled","addListener","console","log","onMessage","request","sender","sendResponse","action","fetch","then","response","json","data","error","message","ok","Error"],"sourceRoot":""}