{"version":3,"file":"popup.00bcfbff748c06d48064.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAImD;AACO,CAAC;AACjC;AACqB;AAE/C,IAAMM,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAAC,UAAA,GAAeJ,2DAAS,CAAC,CAAC;IAAlBK,EAAE,GAAAD,UAAA,CAAFC,EAAE,CAAiB,CAAC;EAC5B,IAAMC,QAAQ,GAAGL,6DAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAAM,SAAA,GAA8BR,+CAAQ,CAAC,IAAI,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BV,gDAAS,CAAC,YAAM;IACdc,KAAK,gCAAAC,MAAA,CAAgCR,EAAE,CAAE,CAAC,CACvCS,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,4BAAAJ,MAAA,CAA4BE,QAAQ,CAACG,UAAU,CAAE,CAAC;MACnE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAAC,UAACM,IAAI;MAAA,OAAKT,UAAU,CAACS,IAAI,CAAC;IAAA,EAAC,SAC3B,CAAC,UAACC,KAAK;MAAA,OAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAAA,EAAC;EACtE,CAAC,EAAE,CAAChB,EAAE,CAAC,CAAC;EAER,IAAI,CAACK,OAAO,EAAE;IACZ,oBAAOb,0DAAA,cAAK,YAAe,CAAC;EAC9B;EAEA,oBACEA,0DAAA;IAAK2B,SAAS,EAAC;EAAkB,gBAC/B3B,0DAAA;IAAK2B,SAAS,EAAC;EAAQ,gBACrB3B,0DAAA;IAAQ2B,SAAS,EAAC,aAAa;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMnB,QAAQ,CAAC,GAAG,CAAC;IAAA;EAAC,GAAC,MAAY,CAAC,KACxE,CAAC,eACNT,0DAAA;IAAK2B,SAAS,EAAC;EAAiB,gBAC9B3B,0DAAA;IAAK6B,GAAG,EAAE,gBAAiB;IAACC,GAAG,EAAEjB,OAAO,CAACkB;EAAK,CAAE,CAC7C,CAAC,eACN/B,0DAAA;IAAK2B,SAAS,EAAC;EAAc,gBAC3B3B,0DAAA;IAAI2B,SAAS,EAAC;EAAc,GAAEd,OAAO,CAACkB,IAAS,CAAC,eAChD/B,0DAAA;IAAG2B,SAAS,EAAC;EAAO,GAAEd,OAAO,CAACmB,KAAK,EAAC,SAAK,CACtC,CAAC,eACNhC,0DAAA;IAAK2B,SAAS,EAAC;EAAwB,gBACrC3B,0DAAA,CAACK,6DAAS,MAAE,CACT,CAAC,eACNL,0DAAA;IAAQ2B,SAAS,EAAC,qBAAqB;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMK,MAAM,CAACC,IAAI,CAACrB,OAAO,CAACsB,IAAI,EAAE,QAAQ,CAAC;IAAA;EAAC,GAAC,uCAAe,CACxG,CAAC;AAEV,CAAC;AAED,iEAAe7B,MAAM;;;;;;;;UC5FrB","sources":["webpack://silkroad/./src/popup/Detail.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import './css/Detail.css';\r\n// import TouchInfo from './components/TouchInfo';\r\n\r\n// const Detail = () => {\r\n//   const { id } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [product, setProduct] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetch(`http://localhost:5001/goods/${id}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProduct(data))\r\n//       .catch((error) => console.error('Error fetching product:', error));\r\n//   }, [id]);\r\n\r\n//   if (!product) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n  \r\n//   return (\r\n//     <div className=\"detail-container\">\r\n//       <div className=\"navbar\">\r\n//         <button className=\"back-button\" onClick={() => navigate('/')}></button>\r\n//       </div>\r\n//       <div className=\"image-container\">\r\n//         <img src={'./sample2.jpeg'} alt={product.NAME} />\r\n//       </div>\r\n//       <div className=\"product-info\">\r\n//         <h1 className=\"product-name\">{product.NAME}</h1>\r\n//         <p className=\"price\">{product.PRICE} 원</p>\r\n//       </div>\r\n//       <div className=\"tactile-info-container\">\r\n//         <TouchInfo />\r\n//       </div>\r\n//       <button className=\"view-product-button\" onClick={() => window.open(product.LINK, '_blank')}>상품 보러가기</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Detail;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // 수정된 부분\r\nimport './css/Detail.css';\r\nimport TouchInfo from './components/TouchInfo';\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams(); // 수정된 부분\r\n  const navigate = useNavigate(); // 수정된 부분\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://127.0.0.1:5001/goods/${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching product: ${response.statusText}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => setProduct(data))\r\n      .catch((error) => console.error('Error fetching product:', error));\r\n  }, [id]);\r\n\r\n  if (!product) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"detail-container\">\r\n      <div className=\"navbar\">\r\n        <button className=\"back-button\" onClick={() => navigate('/')}>Back</button> {/* 수정된 부분 */}\r\n      </div>\r\n      <div className=\"image-container\">\r\n        <img src={'./sample2.jpeg'} alt={product.NAME} />\r\n      </div>\r\n      <div className=\"product-info\">\r\n        <h1 className=\"product-name\">{product.NAME}</h1>\r\n        <p className=\"price\">{product.PRICE} 원</p>\r\n      </div>\r\n      <div className=\"tactile-info-container\">\r\n        <TouchInfo />\r\n      </div>\r\n      <button className=\"view-product-button\" onClick={() => window.open(product.LINK, '_blank')}>상품 보러가기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","__webpack_require__.h = () => (\"bcc799f0235b74bf0fcd\")"],"names":["React","useEffect","useState","useParams","useNavigate","TouchInfo","Detail","_useParams","id","navigate","_useState","_useState2","_slicedToArray","product","setProduct","fetch","concat","then","response","ok","Error","statusText","json","data","error","console","createElement","className","onClick","src","alt","NAME","PRICE","window","open","LINK"],"sourceRoot":""}