{"version":3,"file":"popup.10880d5e785166223084.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEmD;AACrB;AAE9B,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAyB;EAAA,IAAnBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EAC/B,IAAAC,SAAA,GAA0BJ,+CAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBN,gDAAS,CAAC,YAAM;IACdU,KAAK,CAAC,uBAAuB,CAAC,CAC3BC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,iCAAAC,MAAA,CAAiCH,QAAQ,CAACI,UAAU,CAAE,CAAC;MACxE;MACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDN,IAAI,CAAC,UAACO,IAAI,EAAK;MACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCT,QAAQ,CAACS,IAAI,CAAC;IAChB,CAAC,CAAC,SACI,CAAC,UAACG,KAAK;MAAA,OAAKF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAAA,EAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,SAAS,EAAK;IACjC,IAAIC,MAAM,IAAIA,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACC,MAAM,EAAE;MACrD,OAAOF,MAAM,CAACC,OAAO,CAACC,MAAM,CAACH,SAAS,CAAC;IACzC;IACA,WAAAR,MAAA,CAAWQ,SAAS;EACtB,CAAC;EAED,oBACExB,0DAAA;IAAK6B,SAAS,EAAC;EAAsB,gBACnC7B,0DAAA;IAAK6B,SAAS,EAAC;EAAkB,gBAC/B7B,0DAAA;IAAQ6B,SAAS,EAAC;EAAiB,GAAC,0BAAY,CAAC,eACjD7B,0DAAA;IAAQ6B,SAAS,EAAC;EAAiB,GAAC,0BAAY,CAAC,eACjD7B,0DAAA;IAAQ6B,SAAS,EAAC;EAAiB,GAAC,oBAAW,CAAC,eAChD7B,0DAAA;IAAQ6B,SAAS,EAAC;EAAiB,GAAC,oBAAW,CAC5C,CAAC,eACN7B,0DAAA;IAAK6B,SAAS,EAAC;EAAY,GACxBpB,KAAK,CAACqB,GAAG,CAAC,UAACC,IAAI;IAAA,oBACd/B,0DAAA;MAAK6B,SAAS,EAAC,YAAY;MAACG,GAAG,EAAED,IAAI,CAACE;IAAG,gBACvCjC,0DAAA;MAAKkC,GAAG,EAAEX,WAAW,CAAC,mBAAmB,CAAE;MAACY,GAAG,EAAEJ,IAAI,CAACK,IAAK;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhC,YAAY,CAAC0B,IAAI,CAACE,EAAE,CAAC;MAAA;IAAC,CAAE,CAAC,eACpGjC,0DAAA,YAAI+B,IAAI,CAACK,IAAI,eAACpC,0DAAA,aAAY,CAAI,CAC3B,CAAC;EAAA,CACP,CACE,CACF,CAAC;AAEV,CAAC;AAED,iEAAeG,SAAS;;;;;;;;UCnMxB","sources":["webpack://silkroad/./src/popup/components/GoodsList.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import '../css/GoodsList.css';\n\n// const GoodsList = ({ onImageClick }) => {\n//   const [goods, setGoods] = useState([]);\n\n//   useEffect(() => {\n//     if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n//       // 크롬 확장 프로그램 환경\n//       chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n//         if (response && response.error) {\n//           console.error('Error fetching goods:', response.error);\n//         } else if (response && response.data) {\n//           setGoods(response.data);\n//         }\n//       });\n//     } else {\n//       // 로컬 개발 환경\n//       fetch('http://localhost:5001/goods')\n//         .then((response) => response.json())\n//         .then((data) => setGoods(data))\n//         .catch((error) => console.error('Error fetching goods:', error));\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"goods-list-container\">\n//       <div className=\"category-buttons\">\n//         <button className=\"category-button\">부드러움</button>\n//         <button className=\"category-button\">매끄러움</button>\n//         <button className=\"category-button\">두꺼움</button>\n//         <button className=\"category-button\">신축성</button>\n//       </div>\n//       <div className=\"goods-list\">\n//         {goods.map((item) => (\n//           <div className=\"goods-item\" key={item.ID}>\n//             <img src={'/sample.png'} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n//             <p>{item.NAME}<span></span></p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GoodsList;\n\n// import React, { useEffect, useState } from 'react';\n// import '../css/GoodsList.css';\n\n// const GoodsList = ({ onImageClick }) => {\n//   const [goods, setGoods] = useState([]);\n\n//   useEffect(() => {\n//     if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n//       // 크롬 확장 프로그램 환경\n//       chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n//         if (response && response.error) {\n//           console.error('Error fetching goods:', response.error);\n//         } else if (response && response.data) {\n//           setGoods(response.data);\n//         }\n//       });\n//     } else {\n//       // 로컬 개발 환경\n//       fetch('http://localhost:5001/goods')\n//         .then((response) => response.json())\n//         .then((data) => setGoods(data))\n//         .catch((error) => console.error('Error fetching goods:', error));\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"goods-list-container\">\n//       <div className=\"category-buttons\">\n//         <button className=\"category-button\">부드러움</button>\n//         <button className=\"category-button\">매끄러움</button>\n//         <button className=\"category-button\">두꺼움</button>\n//         <button className=\"category-button\">신축성</button>\n//       </div>\n//       <div className=\"goods-list\">\n//         {goods.map((item) => (\n//           <div className=\"goods-item\" key={item.ID}>\n//             <img src={'/sample.png'} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n//             <p>{item.NAME}<span></span></p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GoodsList;\n\n// import React, { useEffect, useState } from 'react';\n// import '../css/GoodsList.css';\n\n// const GoodsList = ({ onImageClick }) => {\n//   const [goods, setGoods] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       if (chrome && chrome.runtime && chrome.runtime.sendMessage) {\n//         // 크롬 확장 프로그램 환경\n//         chrome.runtime.sendMessage({ action: 'fetchGoods' }, (response) => {\n//           if (response && response.error) {\n//             console.error('Error fetching goods:', response.error);\n//           } else if (response && response.data) {\n//             setGoods(response.data);\n//           }\n//         });\n//       } else {\n//         // 로컬 개발 환경\n//         try {\n//           const response = await fetch('http://127.0.0.1:5001/goods');\n//           const data = await response.json();\n//           setGoods(data);\n//         } catch (error) {\n//           console.error('Error fetching goods:', error);\n//         }\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"goods-list-container\">\n//       <div className=\"category-buttons\">\n//         <button className=\"category-button\">부드러움</button>\n//         <button className=\"category-button\">매끄러움</button>\n//         <button className=\"category-button\">두꺼움</button>\n//         <button className=\"category-button\">신축성</button>\n//       </div>\n//       <div className=\"goods-list\">\n//         {goods.map((item) => (\n//           <div className=\"goods-item\" key={item.ID}>\n//             <img src={chrome.runtime.getURL(\"public/sample.png\")} alt={item.NAME} onClick={() => onImageClick(item.ID)} />\n//             <p>{item.NAME}<span></span></p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GoodsList;\n\nimport React, { useEffect, useState } from 'react';\nimport '../css/GoodsList.css';\n\nconst GoodsList = ({ onImageClick }) => {\n  const [goods, setGoods] = useState([]);\n\n  useEffect(() => {\n    fetch('http://127:5001/goods')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Network response was not ok: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Fetched goods:', data);\n        setGoods(data);\n      })\n      .catch((error) => console.error('Error fetching goods:', error));\n  }, []);\n\n  const getImageUrl = (imagePath) => {\n    if (chrome && chrome.runtime && chrome.runtime.getURL) {\n      return chrome.runtime.getURL(imagePath);\n    }\n    return `/${imagePath}`;\n  };\n\n  return (\n    <div className=\"goods-list-container\">\n      <div className=\"category-buttons\">\n        <button className=\"category-button\">부드러움</button>\n        <button className=\"category-button\">매끄러움</button>\n        <button className=\"category-button\">두꺼움</button>\n        <button className=\"category-button\">신축성</button>\n      </div>\n      <div className=\"goods-list\">\n        {goods.map((item) => (\n          <div className=\"goods-item\" key={item.id}>\n            <img src={getImageUrl(\"public/sample.png\")} alt={item.name} onClick={() => onImageClick(item.id)} />\n            <p>{item.name}<span></span></p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GoodsList;\n","__webpack_require__.h = () => (\"eb48a87b2fe513da2116\")"],"names":["React","useEffect","useState","GoodsList","_ref","onImageClick","_useState","_useState2","_slicedToArray","goods","setGoods","fetch","then","response","ok","Error","concat","statusText","json","data","console","log","error","getImageUrl","imagePath","chrome","runtime","getURL","createElement","className","map","item","key","id","src","alt","name","onClick"],"sourceRoot":""}