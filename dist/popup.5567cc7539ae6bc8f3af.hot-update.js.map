{"version":3,"file":"popup.5567cc7539ae6bc8f3af.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIyC;AAEzC,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAiC;EAAA,IAA3BC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;EACvCJ,gDAAS,CAAC,YAAM;IACdK,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,SAAS,CAAC,CAAC,CAAE;IACpE,IAAIA,SAAS,KAAK,IAAI,EAAE;MACtB;MACAG,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,IAAI,CAACA,SAAS,EAAE;IACd,oBAAOL,0DAAA,cAAK,oEAAqB,CAAC;EACpC;EAEA,oBACEA,0DAAA,2BACEA,0DAAA,cAAK,4BAAM,EAACK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAO,CAAC,eACnCL,0DAAA,cAAK,gBAAI,EAACK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAO,CAAC,eACjCL,0DAAA,cAAK,4BAAM,EAACK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAO,CAAC,eACnCL,0DAAA,cAAK,sBAAK,EAACK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAO,CAC9B,CAAC;AAEV,CAAC;AAED,iEAAeH,SAAS;;;;;;;;UC/GxB","sources":["webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import ProgressBar from 'react-bootstrap/ProgressBar';\r\n// import axios from 'axios';\r\n// import '../css/TouchInfo.css';\r\n\r\n// const TouchInfo = ({ productId }) => {\r\n//   const [touchData, setTouchData] = useState({\r\n//     softness: 0,\r\n//     smoothness: 0,\r\n//     thickness: 0,\r\n//     flexibility: 0\r\n//   });\r\n\r\n//   const labelMapping = {\r\n//     softness: '부드러움',\r\n//     smoothness: '매끄러움',\r\n//     thickness: '두께',\r\n//     flexibility: '신축성'\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       const fetchTouchData = async () => {\r\n//         try {\r\n//           const response = await axios.get(`http://127.0.0.1:5001/goods/${productId}`);\r\n//           const data = response.data;\r\n//           console.log(\"서버에서 받은 촉감 데이터:\", data);\r\n\r\n//           if (data) {\r\n//             setTouchData({\r\n//               softness: data.SOFTNESS || 0,\r\n//               smoothness: data.SMOOTHNESS || 0,\r\n//               thickness: data.THICKNESS || 0,\r\n//               flexibility: data.FLEXIBILITY || 0\r\n//             });\r\n//           }\r\n//         } catch (error) {\r\n//           console.error(\"촉감 데이터를 불러오는 중 에러 발생:\", error);\r\n//         }\r\n//       };\r\n\r\n//       fetchTouchData();\r\n//     }\r\n//   }, [productId]);\r\n\r\n//   const colorMapping = {\r\n//     softness: '#FFDBDA',\r\n//     smoothness: '#FFDBDA',\r\n//     thickness: '#FFDBDA',\r\n//     flexibility: '#FFDBDA'\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"touch-info\">\r\n//       <div className='touch-info-text'>\r\n//       </div>\r\n//       <div className='touch-area'>\r\n//         {Object.keys(touchData).map((key) => (\r\n//           <div key={key} className=\"touch-bar\">\r\n//             <span>{labelMapping[key]}</span>\r\n//             <div className=\"progress-bar-wrapper\">\r\n//               <ProgressBar\r\n//                 now={(touchData[key] / 5) * 100}\r\n//                 className=\"custom-progress-bar\"\r\n//                 style={{\r\n//                   backgroundColor: 'transparent',\r\n//                   backgroundImage: `linear-gradient(to right, ${colorMapping[key]} 0%, ${colorMapping[key]} ${(touchData[key] / 5) * 100}%, #ffffff ${(touchData[key] / 5) * 100}%, #ffffff 100%)`\r\n//                 }}\r\n//               />\r\n//               <div className=\"ticks\">\r\n//                 {[...Array(6)].map((_, i) => (\r\n//                   <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TouchInfo;\r\n\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nconst TouchInfo = ({ productId, touchInfo }) => {\r\n  useEffect(() => {\r\n    console.log('TouchInfo component received touchInfo:', touchInfo);  // 로그 추가\r\n    if (touchInfo === null) {\r\n      // 경고창 표시\r\n      alert('해당 상품의 촉감 정보를 알 수 없습니다');\r\n    }\r\n  }, [touchInfo]);\r\n\r\n  if (!touchInfo) {\r\n    return <div>촉감 정보를 불러오는 중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>부드러움: {touchInfo[0] + 1}</div>\r\n      <div>두께: {touchInfo[1] + 1}</div>\r\n      <div>매끄러움: {touchInfo[2] + 1}</div>\r\n      <div>신축성: {touchInfo[3] + 1}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TouchInfo;\r\n","__webpack_require__.h = () => (\"946502c6b14d5c905a77\")"],"names":["React","useEffect","TouchInfo","_ref","productId","touchInfo","console","log","alert","createElement"],"sourceRoot":""}