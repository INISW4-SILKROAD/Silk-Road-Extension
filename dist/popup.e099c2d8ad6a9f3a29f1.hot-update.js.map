{"version":3,"file":"popup.e099c2d8ad6a9f3a29f1.hot-update.js","mappings":"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","sources":["webpack://silkroad/./src/popup/components/TouchInfo.jsx","webpack://silkroad/webpack/runtime/getFullHash"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import ProgressBar from 'react-bootstrap/ProgressBar';\r\n// import axios from 'axios';\r\n// import '../css/TouchInfo.css';\r\n\r\n// const TouchInfo = ({ productId }) => {\r\n//   const [touchData, setTouchData] = useState({\r\n//     softness: 0,\r\n//     smoothness: 0,\r\n//     thickness: 0,\r\n//     flexibility: 0\r\n//   });\r\n\r\n//   const labelMapping = {\r\n//     softness: '부드러움',\r\n//     smoothness: '매끄러움',\r\n//     thickness: '두께',\r\n//     flexibility: '신축성'\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       const fetchTouchData = async () => {\r\n//         try {\r\n//           const response = await axios.get(`http://127.0.0.1:5001/goods/${productId}`);\r\n//           const data = response.data;\r\n//           console.log(\"서버에서 받은 촉감 데이터:\", data);\r\n\r\n//           if (data) {\r\n//             setTouchData({\r\n//               softness: data.SOFTNESS || 0,\r\n//               smoothness: data.SMOOTHNESS || 0,\r\n//               thickness: data.THICKNESS || 0,\r\n//               flexibility: data.FLEXIBILITY || 0\r\n//             });\r\n//           }\r\n//         } catch (error) {\r\n//           console.error(\"촉감 데이터를 불러오는 중 에러 발생:\", error);\r\n//         }\r\n//       };\r\n\r\n//       fetchTouchData();\r\n//     }\r\n//   }, [productId]);\r\n\r\n//   const colorMapping = {\r\n//     softness: '#FFDBDA',\r\n//     smoothness: '#FFDBDA',\r\n//     thickness: '#FFDBDA',\r\n//     flexibility: '#FFDBDA'\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"touch-info\">\r\n//       <div className='touch-info-text'>\r\n//       </div>\r\n//       <div className='touch-area'>\r\n//         {Object.keys(touchData).map((key) => (\r\n//           <div key={key} className=\"touch-bar\">\r\n//             <span>{labelMapping[key]}</span>\r\n//             <div className=\"progress-bar-wrapper\">\r\n//               <ProgressBar\r\n//                 now={(touchData[key] / 5) * 100}\r\n//                 className=\"custom-progress-bar\"\r\n//                 style={{\r\n//                   backgroundColor: 'transparent',\r\n//                   backgroundImage: `linear-gradient(to right, ${colorMapping[key]} 0%, ${colorMapping[key]} ${(touchData[key] / 5) * 100}%, #ffffff ${(touchData[key] / 5) * 100}%, #ffffff 100%)`\r\n//                 }}\r\n//               />\r\n//               <div className=\"ticks\">\r\n//                 {[...Array(6)].map((_, i) => (\r\n//                   <div key={i} className=\"tick\" style={{ left: `${(i / 5) * 100}%` }} />\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TouchInfo;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../css/TouchInfo.css'; // 필요한 경우 CSS 파일 경로 수정\r\n\r\nconst TouchInfo = ({ touchInfo }) => {\r\n  const [showWarning, setShowWarning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (touchInfo === null) {\r\n      setShowWarning(true);\r\n    } else {\r\n      setShowWarning(false);\r\n    }\r\n  }, [touchInfo]);\r\n\r\n  const handleCloseWarning = () => {\r\n    setShowWarning(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"touch-info-container\">\r\n      {showWarning && (\r\n        <div className=\"warning-overlay\">\r\n          <div className=\"warning-message\">\r\n            <p>해당 상품은 촉감 정보를 예측할 수 없습니다.</p>\r\n            <button onClick={handleCloseWarning}>확인</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {touchInfo && (\r\n        <div className=\"touch-info\">\r\n          <div className=\"progress-bar\">\r\n            <div className=\"progress\" style={{ width: `${touchInfo[0] * 20}%` }} />\r\n            <span>부드러움: {touchInfo[0]}</span>\r\n          </div>\r\n          <div className=\"progress-bar\">\r\n            <div className=\"progress\" style={{ width: `${touchInfo[1] * 20}%` }} />\r\n            <span>두께: {touchInfo[1]}</span>\r\n          </div>\r\n          <div className=\"progress-bar\">\r\n            <div className=\"progress\" style={{ width: `${touchInfo[2] * 20}%` }} />\r\n            <span>매끄러움: {touchInfo[2]}</span>\r\n          </div>\r\n          <div className=\"progress-bar\">\r\n            <div className=\"progress\" style={{ width: `${touchInfo[3] * 20}%` }} />\r\n            <span>신축성: {touchInfo[3]}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TouchInfo;\r\n","__webpack_require__.h = () => (\"468d79faa83f15322db5\")"],"names":["React","useEffect","useState","TouchInfo","_ref","touchInfo","_useState","_useState2","_slicedToArray","showWarning","setShowWarning","handleCloseWarning","createElement","className","onClick","style","width","concat"],"sourceRoot":""}